{"version":3,"sources":["Components/Square.js","Components/Board.js","Components/Game.js","App.js","index.js"],"names":["Square","value","onClick","className","Board","useState","Array","fill","squares","setSquares","isXTurn","setIsXTurn","renderSquare","i","squaresTemp","slice","alert","handleClick","Game","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAWeA,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACvB,OACE,4BAAQC,UAAU,SAASD,QAAS,kBAAMA,MACvCD,IC+CQG,EAjDD,WAAM,MAEYC,mBAASC,MAAM,GAAGC,KAAK,OAFnC,mBAEXC,EAFW,KAEFC,EAFE,OAGYJ,oBAAS,GAHrB,mBAGXK,EAHW,KAGFC,EAHE,KAuBZC,EAAe,SAACC,GACpB,OAAO,kBAAC,EAAD,CAAQZ,MAAOO,EAAQK,GAAIX,QAAS,kBAlBzB,SAACW,GAEnB,IAAMC,EAAcN,EAAQO,QAGvBD,EAAYD,GAQfG,MAAM,UAAD,OAAWH,EAAX,4BAPMC,EAAYD,GAAvBH,EAA4B,IAAyB,IAGrDC,GAAYD,GACZD,EAAWK,IAQoCG,CAAYJ,OAG/D,OACE,6BACE,yBAAKV,UAAU,UAAf,gBAAsCO,EAAU,IAAM,KACtD,yBAAKP,UAAU,aACZS,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKT,UAAU,aACZS,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKT,UAAU,aACZS,EAAa,GACbA,EAAa,GACbA,EAAa,MCvCPM,EAJF,WACX,OAAO,kBAAC,EAAD,OCIMC,EAJH,WACV,OAAO,kBAAC,EAAD,OCDTC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e3479b02.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nconst Square = ({ value, onClick }) => {\n  return (\n    <button className=\"square\" onClick={() => onClick()}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Square from \"./Square\";\n\nconst Board = () => {\n  // State\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(true);\n\n  // Helper function\n  const handleClick = (i) => {\n    //clone squares\n    const squaresTemp = squares.slice();\n\n    //change value state squares\n    if (!squaresTemp[i]) {\n      isXTurn ? (squaresTemp[i] = \"X\") : (squaresTemp[i] = \"O\");\n\n      //update state\n      setIsXTurn(!isXTurn);\n      setSquares(squaresTemp);\n    } else {\n      //alert error\n      alert(`Square ${i} already has a value!!`);\n    }\n  };\n\n  const renderSquare = (i) => {\n    return <Square value={squares[i]} onClick={() => handleClick(i)} />;\n  };\n\n  return (\n    <div>\n      <div className=\"status\">Next player: {isXTurn ? \"X\" : \"O\"}</div>\n      <div className=\"board-row\">\n        {renderSquare(1)}\n        {renderSquare(2)}\n        {renderSquare(3)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(4)}\n        {renderSquare(5)}\n        {renderSquare(6)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(7)}\n        {renderSquare(8)}\n        {renderSquare(9)}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\n\nimport Board from \"./Board\";\n\nconst Game = () => {\n  return <Board />;\n};\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Game from \"./Components/Game\";\n\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}